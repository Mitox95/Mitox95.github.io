{"version":3,"sources":["data.js","components/lines.js","components/home.js","components/line.js","components/stop.js","components/time.js","App.js","serviceWorker.js","index.js"],"names":["plan","index","name","stops","stop","time","times","Lines","map","line","key","to","Home","className","Line","lineId","match","params","Stop","stopId","deptime","d","moment","format","add","modifyDate","Time","timeId","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2646a390.chunk.js","sourcesContent":["export const plan = [\r\n    {\r\n        index: '0',\r\n        name: '100',\r\n        stops: [\r\n            {\r\n                stop: \"las\",\r\n                time: \"0\"\r\n            },\r\n            {\r\n                stop: \"bagno\",\r\n                time: \"5\"   \r\n            },\r\n            {\r\n                stop: \"Nowy obóz\",\r\n                time: \"19\"   \r\n            },\r\n            {\r\n                stop: \"Stary obóz\",\r\n                time: \"30\"   \r\n            },\r\n            {\r\n                stop: \"Wieża Xardassa\",\r\n                time: \"50\"   \r\n            }\r\n        ],\r\n        times: [\r\n            \"10:00\",\"10:30\",\"12:14\",\"13:48\",\"14:21\",\"15:50\",\"16:43\",\"17:20\",\"19:00\",\"04:40\" \r\n        ]\r\n      },\r\n      {\r\n        index: '1',\r\n        name: '101',\r\n        stops: [\r\n            {\r\n                stop: \"Khorinis\",\r\n                time: \"0\"   \r\n            },\r\n            {\r\n                stop: \"Klasztor\",\r\n                time: \"9\"   \r\n            },\r\n            {\r\n                stop: \"Farma Onara\",\r\n                time: \"18\"   \r\n            },\r\n            {\r\n                stop: \"Farma Sekoba\",\r\n                time: \"25\"   \r\n            },\r\n            {\r\n                stop: \"Farma Bengara\",\r\n                time: \"40\"   \r\n            },\r\n        ],\r\n        times: [\r\n            \"10:00\",\"10:30\",\"12:14\",\"13:48\",\"14:21\",\"15:50\",\"16:43\",\"17:20\",\"19:00\",\"04:40\" \r\n        ]\r\n      },\r\n      {\r\n        index: '2',\r\n        name: '102',\r\n        stops: [\r\n            {\r\n                stop: \"Silden\",\r\n                time: \"0\"   \r\n            },\r\n            {\r\n                stop: \"Mora Sul\",\r\n                time: \"15\"   \r\n            },\r\n            {\r\n                stop: \"Myrtana\",\r\n                time: \"20\"   \r\n            },\r\n            {\r\n                stop: \"Nordmar\",\r\n                time: \"28\"   \r\n            },\r\n            {\r\n                stop: \"Varant\",\r\n                time: \"38\"   \r\n            },\r\n        ],\r\n        times: [\r\n            \"10:00\",\"10:30\",\"12:14\",\"13:48\",\"14:21\",\"15:50\",\"16:43\",\"17:20\",\"19:00\",\"04:40\" \r\n        ]\r\n      }\r\n]","import React from 'react';\r\nimport {plan} from '../data';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Lines() {\r\n\r\n\r\n    return (\r\n    <div>\r\n          {plan.map((line, index) => (\r\n            <h5 key={index}>\r\n              <Link to={`/line/${index + 1}`}>{line.name}</Link>\r\n            </h5>\r\n          ))}\r\n    </div>\r\n      );\r\n  \r\n}\r\n\r\nexport default Lines;\r\n","import React from 'react';\r\nimport './home.css';\r\nimport Lines from \"./lines\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n<Lines/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { plan } from '../data';\r\nimport { Link} from \"react-router-dom\";\r\nfunction Line({match}) {\r\n    const {\r\n        params: { lineId }\r\n      } = match;\r\n    const stop = plan[lineId - 1];\r\n\r\n      return (\r\n        <div>\r\n        {stop.stops.map((stop, index) => (\r\n          <h5 key={index}>\r\n            <Link to={`/line/${lineId}/${index + 1}`}>{stop.stop}</Link>\r\n          </h5>\r\n        ))}\r\n  </div>\r\n      );\r\n  \r\n}\r\n\r\nexport default Line;","import React from 'react';\r\nimport {plan} from '../data';\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\nfunction Stop({match}) {\r\n    const {\r\n        params: { lineId , stopId}\r\n      } = match;\r\n\r\n      function modifyDate(time){\r\n        var d = new moment(time, 'HH:mm').format('HH:mm');\r\n\r\n        d = moment(d, \"HH:mm\")\r\n        .add(plan[lineId -1].stops[stopId -1].time, 'minutes')\r\n        .format('HH:mm');\r\n\r\n        return d;\r\n      }\r\n\r\n\r\n      return (\r\n          <div>\r\n        {plan[lineId - 1].times.map((deptime, index) => (\r\n           \r\n          <button key={index}>\r\n            <Link to={`/line/${lineId}/${stopId}/${index + 1 }`}>{modifyDate(deptime)}</Link>\r\n          </button>\r\n        ))}\r\n        </div>\r\n      );\r\n  \r\n}\r\n\r\nexport default Stop;","import React from 'react';\r\nimport {plan} from '../data';\r\nimport moment from 'moment';\r\n\r\nfunction Time({match}) {\r\n    const {\r\n        params: { lineId, timeId}\r\n      } = match;\r\n\r\n      function modifyDate(time){\r\n        var d = new moment(plan[lineId -1].times[timeId - 1], 'HH:mm').format('HH:mm');\r\n        d = moment(d, \"HH:mm\")\r\n        .add(time, 'minutes')\r\n        .format('HH:mm');\r\n        return d;\r\n      }\r\n\r\n      return (\r\n          <div>\r\n        {plan[lineId - 1].stops.map((stop) => (\r\n           <div>\r\n            {stop.stop} - {modifyDate(stop.time)}\r\n           </div>\r\n          \r\n        ))}\r\n        </div>\r\n      );\r\n  \r\n}\r\n\r\nexport default Time;","import React from 'react';\nimport Home from './components/home';\nimport Lines from './components/lines';\nimport Line from './components/line';\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Stop from './components/stop';\nimport Time from './components/time';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <Router>\n      <Home />\n        <Route exact path=\"/lines\" component={Lines} />\n        <Route exact path=\"/line/:lineId\" component={Line} />    \n        <Route exact path=\"/line/:lineId/:stopId\" component={Stop} />\n        <Route exact path=\"/line/:lineId/:stopId/:timeId\" component={Time} />\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}